zerops:
  - setup: medusa
    build:
      envVariables:
        BACKEND_URL: ${RUNTIME_zeropsSubdomain}
      base: nodejs@22
      buildCommands:
        - yarn
        - yarn build
      deployFiles:
        - .medusa/server/~
        - tsconfig.json
        - node_modules
        - ./src/links
    deploy:
      readinessCheck:
        httpGet:
          port: 9000
          path: /health
    run:
      base: nodejs@22
      envVariables:
        DATABASE_TYPE: postgres
        NODE_ENV: production
        BACKEND_URL: ${zeropsSubdomain}
        FRONTEND_URL: ${frontend_zeropsSubdomain}
        DATABASE_URL: postgresql://${db_user}:${db_password}@${db_hostname}:5432/${db_hostname}
        MINIO_BUCKET: ${storage_bucketName}
        MINIO_ENDPOINT: ${storage_apiUrl}
        MINIO_SECRET_KEY: ${storage_secretAccessKey}
        MINIO_ACCESS_KEY: ${storage_accessKeyId}
        REDIS_URL: redis://${redis_hostname}:6379
        CACHE_REDIS_URL: redis://${redis_hostname}:6379
        EVENTS_REDIS_URL: redis://${redis_hostname}:6379
        MEILISEARCH_HOST: ${search_hostname}:${search_port}
        MEILISEARCH_API_KEY: ${search_masterKey}
      initCommands:
        - zsc execOnce ${appVersionId}_migration npx medusa db:migrate
        - zsc execOnce ${appVersionId}_links npx medusa db:sync-links
        - zsc execOnce initialData yarn seed
        - zsc execOnce initialAdmin -- npx medusa user -e $SUPERADMIN_EMAIL -p $SUPERADMIN_PASSWORD
        - zsc execOnce initialSetPublishableKey -- npx medusa exec ./src/scripts/output-publishable-key.js | grep -o "<PK_TOKEN>.*</PK_TOKEN>" | sed 's/<PK_TOKEN>//;s/<\/PK_TOKEN>//' | zsc setSecretEnv CHANNEL_PUBLISHABLE_KEY
      ports:
        - port: 9000
          httpSupport: true
      start: yarn start
      healthCheck:
        httpGet:
          port: 9000
          path: /health
