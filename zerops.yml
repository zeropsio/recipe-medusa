zerops:
  - setup: medusa
    build:
      envVariables:
        BACKEND_URL: ${MEDUSA_INSTANCE_URL}
      base: nodejs@22
      buildCommands:
        - yarn
        - yarn build
      deployFiles:
        - .medusa/server/~
        - tsconfig.json
        - node_modules
        - ./src/scripts/seed-files
      cache: node_modules
    deploy:
      readinessCheck:
        httpGet:
          port: 9000
          path: /health
    run:
      base: nodejs@22
      envVariables:
        DATABASE_TYPE: postgres
        NODE_ENV: production
        BACKEND_URL: ${MEDUSA_INSTANCE_URL}
        STORE_CORS: ${NEXT_STORE_URL},${ANALOG_STORE_URL},http://localhost:5173
        DATABASE_URL: postgresql://${db_user}:${db_password}@${db_hostname}:5432/${db_hostname}?ssl_mode=disable
        MINIO_BUCKET: ${storage_bucketName}
        MINIO_ENDPOINT: ${storage_apiUrl}
        MINIO_SECRET_KEY: ${storage_secretAccessKey}
        MINIO_ACCESS_KEY: ${storage_accessKeyId}
        REDIS_URL: redis://${redis_hostname}:6379
        CACHE_REDIS_URL: redis://${redis_hostname}:6379
        EVENTS_REDIS_URL: redis://${redis_hostname}:6379
        MEILISEARCH_HOST: http://${search_hostname}:${search_port}
        MEILISEARCH_API_KEY: ${search_masterKey}
      initCommands:
        # with each deploy
        - zsc execOnce ${appVersionId}_migration -- yarn migrate
        - zsc execOnce ${appVersionId}_links -- yarn syncLinks
        # initial setup, happens once in service lifetime
        - zsc execOnce createInitialSuperadmin -- yarn createInitialSuperadmin
        - zsc execOnce seedInitialData -- yarn seedInitialData
        - zsc execOnce setInitialPublishableKey -- yarn setInitialPublishableKey
        - zsc execOnce setSearchApiKey -- yarn setSearchApiKey
        - zsc execOnce addInitialSearchDocuments -- yarn addInitialSearchDocuments
      ports:
        - port: 9000
          httpSupport: true
      start: yarn start
      healthCheck:
        httpGet:
          port: 9000
          path: /health
